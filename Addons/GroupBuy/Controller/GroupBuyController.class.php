<?php

namespace Addons\GroupBuy\Controller;


/**
 * 组团信息控制器
 * Class GroupBuyController
 * @package Addons\GroupBuy\Controller
 */
class GroupBuyController extends BaseController
{

    /**
     * init
     */
    function _initialize()
    {
        parent::_initialize();

        // 配置模型
        $this->model = $this->getModel('groupbuy_info');
    }


    /**
     * 显示列表
     */
    public function lists()
    {
        $this->assign('add_button', 0);
        $this->assign('del_button', 0);
        $this->listsTable = "groupbuy_info_all";
        parent::lists(); // TODO: Change the autogenerated stub
    }

    /**
     * 扩展字段下拉框
     * @param $fields
     * @return \Addons\School\Controller\Common\Controller\当前的字段
     */
    public function getFieldList($fields)
    {
        $fields = parent::getFieldList($fields);
        $fields = $this->setFiledExtra($fields, "type_id", 'groupbuy_type', 'name');

        // 返回
        return $fields;
    }

    /**
     * 取得参与者信息
     */
    public function listsParty()
    {
        // 取得信息
        $partyController = new  GroupBuyPartyController();
        $partyController->model['template_list'] = 'lists';
        $partyController->lists();
    }


    /**
     * 获取活动信息(完整)
     */
    public function getGroupbuyInfo($groupBuyId = null)
    {
        $groupBuyId || $groupBuyId = $_REQUEST['groupbuyid'];
        if (empty($groupBuyId)) {
            return null;
        }

        // 设置团购信息
        $groupBuyInfo = $this->getDataById("groupbuy_info_all", $groupBuyId);
        $groupBuyInfo["type"] = M('groupbuy_type')->where(array("token" => get_token()))->find();
        $groupBuyInfo["partyList"] = $this->getPartyList($groupBuyId);
        $groupBuyInfo["sub_num"] = $groupBuyInfo["people_num"] - count($groupBuyInfo["partyList"]);
        $groupBuyInfo["current_num"] = count($groupBuyInfo["partyList"]);

        // 得到缴费项目
        $groupBuyInfo["payItem"] = $this->getDataById("school_payitem", $groupBuyInfo["type"]["payitem_id"]);


        // 计算当前折扣
        $groupBuyInfo["privilege"] = 0;
        $strategy = array();
        foreach (explode(";", $groupBuyInfo["strategy"]) as $item) {
            $value = explode(":", $item);
            $strategy[intval($value[0])] = intval($value[1]);
            if (count($groupBuyInfo["partyList"]) >= intval($value[0])) {
                $groupBuyInfo["privilege"] = $value[1];
            }
        }

        // 设置状态
        $groupBuyInfo["status"] = $this->getStatus($groupBuyInfo);

        // 返回
        return $groupBuyInfo;
    }

    /**
     * 获取参与人
     */
    private function getPartyList($groupBuyId = null)
    {
        $_GET['groupbuy_info_id'] = $groupBuyId;
        $partyList =  R('Addons://GroupBuy/GroupBuyParty/_get_model_list')['list_data'];
        for($i = 0; $i < count($partyList); $i ++){
            $partyList[$i]['time'] = day_format($partyList[$i]['time']);
        }



        $result = array();
        foreach ($partyList as $item) {
            if ($item["is_refund"] == "0" && count(R('Addons://EO2OPayment/EO2OPayment/moneyLog', array($item['openid']))) > 0) {
                array_push($result, $item);
            }
        }

        return $result;
    }


    /**
     *  0 活动未开始
     *  1 活动进行中
     *  2 活动结束
     * 是否活动结束
     */
    private function getStatus($groupBuyInfo)
    {
        // 已经结束
        if (count($groupBuyInfo["party_list"]) >= $groupBuyInfo["type"]['people_num']) {
            return "2";
        }

        // 活动进行中
        return "1";
    }
}
